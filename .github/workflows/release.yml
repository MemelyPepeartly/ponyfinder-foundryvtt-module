name: ponyfinder foundry release

on:
  push:
    branches:
      - main
#    paths:
#      - 'module.json'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Get Version              # Run the script that returns the version from `module.json`
      shell: bash
      id: get-version
      run: echo "::set-output name=version::$(node ./.github/workflows/get-version.js)"
    - name: Build module.json
      run: node ./.github/workflows/build-module-json.js | jq . > module.json
    - run: npm ci
    - name: Webpack
      run: npm run build
    - name: Build icon json
      run: ./icon.sh
    - name: Create Release Zip
      run: zip -r ./ponyfinder-foundryvtt-module.zip module.json assets packs # Add folders/files here
    - name: Create Release                                # Create an additional release for this version
      id: create_versioned_release
      uses: ncipollo/release-action@v1
      with:
        allowUpdates: false # set to false if you do not want to allow updates on existing releases
        name: Release ${{ steps.get-version.outputs.version }} # Use the version in the name
        draft: false
        prerelease: false
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: './module.json,./ponyfinder-foundryvtt-module.zip'    # don't forget to rename module zip thing
        tag: ${{ steps.get-version.outputs.version }} # Use the version as the tag
    - name: Create Latest Release
      id: create_latest_release
      uses: ncipollo/release-action@v1
      if: endsWith(github.ref, 'main') # Only update the latest release when pushing to the master branch
      with:
        allowUpdates: true
        name: Latest
        draft: false
        prerelease: false
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: './module.json,./ponyfinder-foundryvtt-module.zip'  # don't forget to rename module zip thing
        tag: latest
